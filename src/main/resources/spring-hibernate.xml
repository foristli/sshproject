<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 配置数据源 使用的是Druid数据源 -->
	
	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/test" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="123456" />
		<!-- 初始化连接大小 -->
		<beans:property name="initialSize" value="0"></beans:property>
		<!-- 连接池最大数量 -->
		<beans:property name="maxActive" value="20"></beans:property>
		<!-- 连接池最大空闲 -->
		<beans:property name="maxIdle" value="20"></beans:property>
		<!-- 连接池最小空闲 -->
		<beans:property name="minIdle" value="1"></beans:property>
		<!-- 获取连接最大等待时间 -->
		<beans:property name="maxWait" value="60000"></beans:property>
	</beans:bean>
	


	<!-- 配置hibernate的SessionFactory -->
	<beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 注入数据源 相关信息看源码 -->
		<beans:property name="dataSource" ref="dataSource" />
		<!-- hibernate配置信息 -->
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.format_sql">false</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</beans:prop>
			</beans:props>
		</beans:property>
		<!-- 扫描hibernate注解配置的entity -->
		<beans:property name="packagesToScan" value="com.moapp.mavenSSH.beans" />
	</beans:bean>

	<!-- 配置事务管理器 -->
	<beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	
	<!-- 配置事务增强处理Bean，指定事务管理器 -->
	
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- 配置详细事务处理语义 -->
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="load*" propagation="SUPPORTS" read-only="true" />

			<!-- 其他采用默认事务方式 -->
			<tx:method name="*" />

		</tx:attributes>
	</tx:advice>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut id="transactionPointcut" expression="execution(* com.moapp.mavenSSH.serviceImpl.*.*(..))" />
		<!-- 指定在txAdvice切入点应用txAdvice事务增强处理 -->
		<aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
	</aop:config>

</beans:beans>